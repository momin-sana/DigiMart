Create Project
Create *Splash Screen*
     > lottieAnimationView
     > Handler().postDelayed(() = transaction to new activity
Create activity and Design xml for with *signup and signing fragments*

    *SIGNUP FRAGMENT*
        > Initialize all necessary fields, buttons, text, and images
        > Create Validations Methods for all fields
        > Create Method to check validations and proceed to signup function.
            > SignupFragment.validateFields() Here validations are checked on based of which signup btn color is managed. and data is stored in firebase.
        >Navigation to Signing page.
 // DATE: 13 SEPTEMBER 2023
        >Store data to firebase
            >linking firebase to android
                >adding dependencies for firebase auth and realtime database
                >initializing into fragment
            >Create method to check if user already exists or not & to store user data
               > add loading bar with dialogbox
                >validateAccount(String usernameVA, String emailVA, String phoneNumberVA, String cPasswordVA)
                    >in this method I have used   // Sanitize the email to create a valid database key
                        here OR WE CAN Also USE UID // i think this is much better to user for future data storage.
                    f    FirebaseUser currentUser = mAuth.getCurrentUser();
                        private void validateAccount(String usernameVA, String emailVA, String phoneNumberVA, String cPasswordVA) {
                            final DatabaseReference databaseReference = FirebaseDatabase.getInstance().getReference();

                            FirebaseAuth mAuth = FirebaseAuth.getInstance();
                            FirebaseUser currentUser = mAuth.getCurrentUser();

                            if (currentUser != null) {
                                String uid = currentUser.getUid();

                                // Check if a user with this UID exists in the database, have also added username here, to cross check email and username under same uid
                                Code in SignupFragment.java >  databaseReference.child("Users").orderByChild("username").equalTo(usernameVA)....

                            }
                        }
<<<<<<<<<<<<<<<<<<<<<<< HERE SIGNUP IS FINISHED <<<<<<<<<<<<<<<<<<<<<<<
 // DATE: 13 SEPTEMBER 2023

Create Custom Dialog box, > used in Multi purpose > dialogbox_userexists.xml
Create LoadingDialog Fragment

    *SIGNIN FRAGMENT*
        > handleOnBackPressed()
        > Apply screen shaking animation
        > Fields Validations
            > Check user exists or not, from USER CLASS we will get the data
        > Account Validaton
        > Google Auth
        > Forgot password
        > Remember me > if marked checked and already login, next time dont ask to login
        > signIn btn > navigate to home page


    *CREATED MODELS PACKAGE:
     WITH USER CLASS RETRIEVE USER AND ITS DETAILS*
        > to retrieve user data


     *CREATED PREVALENT PACKAGE:
     WITH PREVALENT CLASS*
        > to get current user
        > will be used as forgot password and remember me
